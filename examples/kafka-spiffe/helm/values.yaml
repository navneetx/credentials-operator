kafka:
  superUsers: "User::CN=kafka-spiffe-0.kafka-spiffe-headless.default.svc.cluster.local,O=SPIRE,C=US"
  livenessProbe:
    initialDelaySeconds: 20
  readinessProbe:
    initialDelaySeconds: 20
  listeners:
    - "CLIENT://:9092"
    - "INTERNAL://:9093"
    - "EXTERNAL://:9094"
  # CLIENT and EXTERNAL should be SSL so kafka will use the certificates
  listenerSecurityProtocolMap: "INTERNAL:SSL,CLIENT:SSL,EXTERNAL:SSL"
  auth:
    clientProtocol: mtls
    interBrokerProtocol: mtls
    tls:
      # a bit of a hack because this helm chart does not
      # support just specifying file paths, but has to mount a secret.
      # it mounts the specified secret into /certs
      # the right way to do this would be to use a Kubernetes Admission Controller that would apply a secret to the cluster and then specify it here,
      # but currently we just have the CLI, so this enables us to work with that.
      jksKeystoreSAN: ../certs2/kafka-keystore.jks
      jksTruststore: ../certs2/kafka.truststore.jks
      password: password
      existingSecret: kafka-jks-0
      #endpointIdentificationAlgorithm: 'null'
  authorizerClassName: kafka.security.authorizer.AclAuthorizer
  allowEveryoneIfNoAclFound: true
  podLabels:
    app: lab-kafka
  zookeeper:
    podLabels:
      app: lab-zookeeper
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
  volumes:
    - name: spire-agent-socket
      hostPath:
        path: /run/spire/sockets
        type: Directory
  extraVolumes:
    - name: certs-volume
      emptyDir: {}
    - name: spire-agent-socket
      hostPath:
        path: /run/spire/sockets
        type: Directory
  extraVolumeMounts:
    - mountPath: /certs2
      name: certs-volume
    - name: spire-agent-socket
      mountPath: /run/spire/sockets
      readOnly: true
  sidecars:
    - name: kafka-spiffe-sidecar
      image: "public.ecr.aws/e3b4k2v5/kafka-spiffe-sidecar:latest"
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /certs2
          name: certs-volume
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
      command: ["/bin/sh", "-ec", "java -jar java-spiffe-helper.jar -c conf"]
